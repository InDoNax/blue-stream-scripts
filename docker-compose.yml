version: '3'
services:

  # Mongodb
  mongo:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongo-data-volume:/data/db

  # RabbitMQ
  rabbit:
     image: rabbitmq:management
     hostname: rabbit
     volumes:
        - rabbit-volume:/etc/rabbitmq
     ports:
        - "4000:5672"
        - "4001:15672"
     healthcheck: 
        test: ["CMD", "curl", "-f", "http://rabbit:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data/minio
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server /data/minio

  # Videos microservice
  video-service:
    build: ../blue-stream-video
    ports:
      - "5001:3000"
      - "6001:6000"
    env_file:
      - ./env/node.env
      - ./env/mongo.env
      - ./env/rabbitmq.env
    restart: always
    depends_on:
      - mongo
      - rabbit
    links:
      - mongo
      - rabbit

  # Transcoder Service
  transcoder-service:
    build: ../blue-stream-transcoder
    env_file: 
      - ./env/rabbitmq.env
      - ./env/s3.env
    restart: always
    depends_on:
      - rabbit
    links:
      - rabbit

  # Uploader Service
  uploader-service:
    build: ../blue-stream-uploader
    ports:
      - "5002:3000"
    env_file:
      - ./env/node.env
      - ./env/rabbitmq.env
      - ./env/s3.env
    environment:
      MAX_FILE_SIZE: 20971520000
    restart: always
    depends_on:
      - rabbit
    links:
      - rabbit

  # Comment Service
  comment-service:
    build: ../blue-stream-comments
    ports:
      - "5003:3000"
      - "6003:6000"
    env_file:
      - ./env/node.env
      - ./env/rabbitmq.env
      - ./env/mongo.env
    restart: always
    depends_on:
      - rabbit
      - mongo
    links:
      - rabbit
      - mongo

  # Reaction Service
  reaction-service:
    build: ../blue-stream-reactions
    ports:
      - "5004:3000"
      - "6004:6000"
    env_file:
      - ./env/node.env
      - ./env/rabbitmq.env
      - ./env/mongo.env
    restart: always
    depends_on:
      - rabbit
      - mongo
    links:
      - rabbit
      - mongo

  # Channel Service
  channel-service:
    build: ../blue-stream-channel
    ports:
      - "5006:3000"
      - "6006:6000"
    env_file:
      - ./env/node.env
      - ./env/rabbitmq.env
      - ./env/mongo.env
    restart: always
    depends_on:
      - rabbit
      - mongo
    links:
      - rabbit
      - mongo  

  # User Service
  user-service:
    build: ../blue-stream-users
    ports:
      - "5007:3000"
      - "6007:6000"
    env_file:
      - ./env/node.env
      - ./env/mongo.env
      - ./env/rabbitmq.env
    restart: always
    depends_on:
      - rabbit
      - mongo
    links:
      - rabbit
      - mongo

  # Streamer Service
  streamer-service:
    build: ../blue-stream-streamer
    ports:
      - "5005:3000"
    env_file:
      - ./env/node.env
      - ./env/rabbitmq.env
      - ./env/s3.env
    restart: always
    depends_on:
      - rabbit
      - minio
    links:
      - rabbit
      - minio

  # Client
  angular-client:
    build: ../blue-stream-client
    ports:
      - "80:80"
    restart: always
    depends_on:
      - uploader-service
      - video-service
      - transcoder-service
      - user-service


volumes:
  mongo-data-volume:
  rabbit-volume:
  minio-data: